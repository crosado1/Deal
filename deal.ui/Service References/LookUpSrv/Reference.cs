//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace deal.ui.LookUpSrv {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResponse", Namespace="http://tempuri.org/")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(deal.ui.LookUpSrv.ServiceResponseWithResultsetOfServiceTypeModel))]
    public partial class ServiceResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private deal.ui.LookUpSrv.ServiceResponses ResponseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public deal.ui.LookUpSrv.ServiceResponses Response {
            get {
                return this.ResponseField;
            }
            set {
                if ((this.ResponseField.Equals(value) != true)) {
                    this.ResponseField = value;
                    this.RaisePropertyChanged("Response");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResponseWithResultsetOfServiceTypeModel", Namespace="http://tempuri.org/")]
    [System.SerializableAttribute()]
    public partial class ServiceResponseWithResultsetOfServiceTypeModel : deal.ui.LookUpSrv.ServiceResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private deal.ui.LookUpSrv.ServiceTypeModel[] DataField;
        
        private int TotalRecordsField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public deal.ui.LookUpSrv.ServiceTypeModel[] Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int TotalRecords {
            get {
                return this.TotalRecordsField;
            }
            set {
                if ((this.TotalRecordsField.Equals(value) != true)) {
                    this.TotalRecordsField = value;
                    this.RaisePropertyChanged("TotalRecords");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResponses", Namespace="http://tempuri.org/")]
    public enum ServiceResponses : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Failure = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceTypeModel", Namespace="http://tempuri.org/")]
    [System.SerializableAttribute()]
    public partial class ServiceTypeModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int ServiceTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceTypeDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ServiceTypeId {
            get {
                return this.ServiceTypeIdField;
            }
            set {
                if ((this.ServiceTypeIdField.Equals(value) != true)) {
                    this.ServiceTypeIdField = value;
                    this.RaisePropertyChanged("ServiceTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string ServiceTypeDescription {
            get {
                return this.ServiceTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceTypeDescriptionField, value) != true)) {
                    this.ServiceTypeDescriptionField = value;
                    this.RaisePropertyChanged("ServiceTypeDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LookUpSrv.ILookUpRepository")]
    public interface ILookUpRepository {
        
        // CODEGEN: Generating message contract since element name GetAll_ServiceTypeResult from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpRepository/GetAll_ServiceType", ReplyAction="http://tempuri.org/ILookUpRepository/GetAll_ServiceTypeResponse")]
        deal.ui.LookUpSrv.GetAll_ServiceTypeResponse GetAll_ServiceType(deal.ui.LookUpSrv.GetAll_ServiceTypeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILookUpRepository/GetAll_ServiceType", ReplyAction="http://tempuri.org/ILookUpRepository/GetAll_ServiceTypeResponse")]
        System.Threading.Tasks.Task<deal.ui.LookUpSrv.GetAll_ServiceTypeResponse> GetAll_ServiceTypeAsync(deal.ui.LookUpSrv.GetAll_ServiceTypeRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAll_ServiceTypeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetAll_ServiceType", Namespace="http://tempuri.org/", Order=0)]
        public deal.ui.LookUpSrv.GetAll_ServiceTypeRequestBody Body;
        
        public GetAll_ServiceTypeRequest() {
        }
        
        public GetAll_ServiceTypeRequest(deal.ui.LookUpSrv.GetAll_ServiceTypeRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class GetAll_ServiceTypeRequestBody {
        
        public GetAll_ServiceTypeRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAll_ServiceTypeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetAll_ServiceTypeResponse", Namespace="http://tempuri.org/", Order=0)]
        public deal.ui.LookUpSrv.GetAll_ServiceTypeResponseBody Body;
        
        public GetAll_ServiceTypeResponse() {
        }
        
        public GetAll_ServiceTypeResponse(deal.ui.LookUpSrv.GetAll_ServiceTypeResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetAll_ServiceTypeResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public deal.ui.LookUpSrv.ServiceResponseWithResultsetOfServiceTypeModel GetAll_ServiceTypeResult;
        
        public GetAll_ServiceTypeResponseBody() {
        }
        
        public GetAll_ServiceTypeResponseBody(deal.ui.LookUpSrv.ServiceResponseWithResultsetOfServiceTypeModel GetAll_ServiceTypeResult) {
            this.GetAll_ServiceTypeResult = GetAll_ServiceTypeResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILookUpRepositoryChannel : deal.ui.LookUpSrv.ILookUpRepository, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LookUpRepositoryClient : System.ServiceModel.ClientBase<deal.ui.LookUpSrv.ILookUpRepository>, deal.ui.LookUpSrv.ILookUpRepository {
        
        public LookUpRepositoryClient() {
        }
        
        public LookUpRepositoryClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LookUpRepositoryClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LookUpRepositoryClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LookUpRepositoryClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        deal.ui.LookUpSrv.GetAll_ServiceTypeResponse deal.ui.LookUpSrv.ILookUpRepository.GetAll_ServiceType(deal.ui.LookUpSrv.GetAll_ServiceTypeRequest request) {
            return base.Channel.GetAll_ServiceType(request);
        }
        
        public deal.ui.LookUpSrv.ServiceResponseWithResultsetOfServiceTypeModel GetAll_ServiceType() {
            deal.ui.LookUpSrv.GetAll_ServiceTypeRequest inValue = new deal.ui.LookUpSrv.GetAll_ServiceTypeRequest();
            inValue.Body = new deal.ui.LookUpSrv.GetAll_ServiceTypeRequestBody();
            deal.ui.LookUpSrv.GetAll_ServiceTypeResponse retVal = ((deal.ui.LookUpSrv.ILookUpRepository)(this)).GetAll_ServiceType(inValue);
            return retVal.Body.GetAll_ServiceTypeResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<deal.ui.LookUpSrv.GetAll_ServiceTypeResponse> deal.ui.LookUpSrv.ILookUpRepository.GetAll_ServiceTypeAsync(deal.ui.LookUpSrv.GetAll_ServiceTypeRequest request) {
            return base.Channel.GetAll_ServiceTypeAsync(request);
        }
        
        public System.Threading.Tasks.Task<deal.ui.LookUpSrv.GetAll_ServiceTypeResponse> GetAll_ServiceTypeAsync() {
            deal.ui.LookUpSrv.GetAll_ServiceTypeRequest inValue = new deal.ui.LookUpSrv.GetAll_ServiceTypeRequest();
            inValue.Body = new deal.ui.LookUpSrv.GetAll_ServiceTypeRequestBody();
            return ((deal.ui.LookUpSrv.ILookUpRepository)(this)).GetAll_ServiceTypeAsync(inValue);
        }
    }
}
